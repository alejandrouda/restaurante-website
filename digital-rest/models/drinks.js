// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const Drinks = sequelize.define('drinks', {
    name: {
      type: DataTypes.STRING,
    },
    price: {
      type: DataTypes.DOUBLE,
    },
    description: {
      type: DataTypes.STRING,
    },
    setMenuDrink: {
      type: DataTypes.BOOLEAN,
      defaultValue: false,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
  }, {
    tableName: 'drinks',
    underscored: true,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  Drinks.associate = (models) => {
    Drinks.belongsTo(models.menus, {
      foreignKey: {
        name: 'menuIdKey',
        field: 'menu_id',
      },
      as: 'menu',
    });
    Drinks.belongsToMany(models.drinkCategories, {
      through: 'drinkCategoryTags',
      foreignKey: 'drink_id',
      otherKey: 'drink_category_id',
      as: 'drinkCategoriesThroughDrinkCategoryTags',
    });
    Drinks.belongsToMany(models.ingredients, {
      through: 'drinkIngredientTags',
      foreignKey: 'drink_id',
      otherKey: 'ingredient_id',
      as: 'ingredientsThroughDrinkIngredientTags',
    });
    Drinks.hasMany(models.ingredientTags, {
      foreignKey: {
        name: 'drinkIdKey',
        field: 'drink_id',
      },
      as: 'ingredientTags',
    });
    Drinks.hasMany(models.orderProducts, {
      foreignKey: {
        name: 'drinkIdKey',
        field: 'drink_id',
      },
      as: 'orderProducts',
    });
  };

  return Drinks;
};
